# -*- mode: ruby -*-
# vi: set ft=ruby :

# requirements.sh
# Shell provisioner for $PROJECT_NAME
# www.brianspeir.com
#
# Copyright (C) 2013 Brian Speir. All rights reserved.
#

# The hostname the machine should have.
# Permitted characters are the same as those for URLs (letters, numbers, dash)
HOST_NAME = "project-name"

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "debian-wheezy-7.3-amd64"

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "debian-wheezy-7.3-amd64-virtualbox.box"

  # The hostname the machine should have. Defaults to nil. If nil, Vagrant won't
  # manage the hostname. If set to a string, the hostname will be set on boot.
  config.vm.hostname = HOST_NAME

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network :forwarded_port, guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "10.10.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # This sets the username that Vagrant will SSH as by default. Providers are
  # free to override this if they detect a more appropriate user. By default
  # this is "vagrant," since that is what most public boxes are made as.
#  config.ssh.username = "admin-user"
#  config.ssh.private_key_path = "vagrant"

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "scripts", "/scripts"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider :virtualbox do |vb|
  #   # Don't boot with headless mode
  #   vb.gui = true
  #
  #   # Use VBoxManage to customize the VM. For example to change memory:
  #   vb.customize ["modifyvm", :id, "--memory", "1024"]
  # end
  #
  # View the documentation for the provider you're using for more
  # information on available options.

  # Enable provisioning with shell, specifying a path to a shell script on the
  # host machine.
  #
  # The shell provisioner allows you to upload and execute a script
  # as the root user within the guest machine.
  #
  #config.vm.provision :shell, :path => "requirements.sh"

  # Enable provisioning with Ansible using playbooks.
  #
  #config.vm.provision "ansible" do |ansible|
  #  ansible.playbook = "Provisioning/playbook.yml"
  #end

end
